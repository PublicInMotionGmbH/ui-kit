@import './config'

@mixin notification-color($name, $background, $text: text-contrast($background), $border: mix($background, $text, 90%))
  @include module('notification--#{$name}')
    background-color: $background
    border-color: $border
    color: $text

@include module('notification')
  display: flex
  box-sizing: border-box
  font-size: $notification-font-size
  line-height: $notification-line-height
  padding: $notification-padding-vertical $notification-padding-horizontal
  border-radius: $notification-border-radius
  border: $notification-border-width solid $notification-border-color
  background-color: $notification-background-color
  color: $notification-text-color

  &__content
    flex: 1 auto

    > :last-child
      margin-bottom: 0

  &__close
    cursor: pointer
    margin-left: $notification-close-button-margin

  [dir=rtl] &__close
    margin-left: 0
    margin-right: $notification-close-button-margin

@include notification-color('primary', $notification-primary-background-color, $notification-primary-text-color, $notification-primary-border-color)
@include notification-color('secondary', $notification-secondary-background-color, $notification-secondary-text-color, $notification-secondary-border-color)
@include notification-color('tertiary', $notification-tertiary-background-color, $notification-tertiary-text-color, $notification-tertiary-border-color)
@include notification-color('success', $notification-success-background-color, $notification-success-text-color, $notification-success-border-color)
@include notification-color('info', $notification-info-background-color, $notification-info-text-color, $notification-info-border-color)
@include notification-color('warning', $notification-warning-background-color, $notification-warning-text-color, $notification-warning-border-color)
@include notification-color('error', $notification-error-background-color, $notification-error-text-color, $notification-error-border-color)
@include notification-color('toast', $notification-toast-background-color, $notification-toast-text-color, $notification-toast-border-color)

@include module('notifications-list')
  &__content > #{prefix('notification')} + #{prefix('notification')}
    margin-top: $notifications-list-margin

  &__content > #{prefix('notification')}
    transition: 300ms all linear

  &--sticky
    position: fixed
    width: $notifications-list-sticky-width
    max-width: 100%

  &--sticky#{prefix('notifications-list')}--start,
  [dir=rtl] &--sticky#{prefix('notifications-list')}--end
    left: 0
    right: auto

  &--sticky#{prefix('notifications-list')}--end,
  [dir=rtl] &--sticky#{prefix('notifications-list')}--start
    right: 0
    left: auto

  &--sticky#{prefix('notifications-list')}--center
    left: 50%
    right: auto
    transform: translateX(-50%)

  &--sticky#{prefix('notifications-list')}--top
    bottom: 100%

  &--sticky#{prefix('notifications-list')}--bottom
    bottom: 0

  &--sticky &__content > #{prefix('notification')}
    margin: 0
    position: absolute
    width: 100%
    transform: translateY($notifications-list-sticky-sneak-size)
    pointer-events: none

    #{prefix('notification')}__close
      opacity: 0

  &--sticky#{prefix('notifications-list')}--top &__content > #{prefix('notification')}
    transform: translateY(-100%) translateY(-$notifications-list-sticky-sneak-size)

  // Animation in normal list
  &:not(&--sticky) &__content > #{prefix('notification')}
    opacity: 1
    overflow: hidden

    &.fade-exit.fade-exit-active
      opacity: 0

  // Animation in list put on bottom

  &--sticky#{prefix('notifications-list')}--bottom &__content
    > :first-child + .fade-enter:not(.fade-enter-active),
    > .fade-enter:not(.fade-enter-active):first-child
      transform: translateY(-$notifications-list-margin)

    // Handle first element on list

    > :first-child,
    > .fade-exit.fade-exit-active + #{prefix('notification')}
      pointer-events: all
      transform: translateY(-100%) translateY(-$notifications-list-margin) translateY(-$notifications-list-sticky-sneak-size)

      #{prefix('notification')}__close
        opacity: 1

    // Handle second element on list

    > :first-child + #{prefix('notification')},
    > .fade-exit.fade-exit-active + #{prefix('notification')} + #{prefix('notification')}
      transform: translateY(-$notifications-list-sticky-sneak-size)

    // Handle fade out

    > .fade-exit
      opacity: 1

    > .fade-exit.fade-exit-active
      transform: translateY(-200%) translateY(-2 * $notifications-list-margin) translateY(-$notifications-list-sticky-sneak-size)
      opacity: 0

    // Handle the last element

    > :last-child:first-child,
    > .fade-exit.fade-exit-active + :last-child
      transform: translateY(-100%) translateY(-$notifications-list-margin)

    > .fade-exit.fade-exit-active:last-child
      transform: translateY(-200%) translateY(-2 * $notifications-list-margin)

  // Animation in list put on top

  &--sticky#{prefix('notifications-list')}--top &__content
    > :first-child + .fade-enter:not(.fade-enter-active),
    > .fade-enter:not(.fade-enter-active):first-child
      transform: translateY(-100%) translateY($notifications-list-margin)

    // Handle first element on list

    > :first-child,
    > .fade-exit.fade-exit-active + #{prefix('notification')}
      pointer-events: all
      transform: translateY($notifications-list-margin) translateY($notifications-list-sticky-sneak-size)

      #{prefix('notification')}__close
        opacity: 1

    // Handle second element on list

    > :first-child + #{prefix('notification')},
    > .fade-exit.fade-exit-active + #{prefix('notification')} + #{prefix('notification')}
      transform: translateY(-100%) translateY($notifications-list-sticky-sneak-size)

    // Handle fade out

    > .fade-exit
      opacity: 1

    > .fade-exit.fade-exit-active
      transform: translateY(100%) translateY(2 * $notifications-list-margin) translateY($notifications-list-sticky-sneak-size)
      opacity: 0

    // Handle the last element

    > :last-child:first-child,
    > .fade-exit.fade-exit-active + :last-child
      transform: translateY($notifications-list-margin)

    > .fade-exit.fade-exit-active:last-child
      transform: translateY(100%) translateY(2 * $notifications-list-margin)
